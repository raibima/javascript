#!/usr/bin/env node
/* eslint no-console: 0 */
const DEPRECATED_RULES = [
  // react
  'react/no-comment-textnodes',
  'react/require-extension',
  'react/wrap-multilines',
  // babel
  'babel/generator-star-spacing',
  'babel/object-shorthand',
  'babel/arrow-parens',
  'babel/func-params-comma-dangle',
  'babel/array-bracket-spacing',
  'babel/flow-object-type',
  // flowtype
];

// Rules with false positives, missing docs or no clear use case. Revisit later
const EXPERIMENTAL_RULES = [
  'babel/semi',
  'jsx-a11y/accessible-emoji',
  'jsx-a11y/aria-activedescendant-has-tabindex',
  'jsx-a11y/media-has-caption',
  'jsx-a11y/no-autofocus',
  'jsx-a11y/no-distracting-elements',
  'jsx-a11y/no-interactive-element-to-noninteractive-role',
  'jsx-a11y/no-noninteractive-element-interactions',
  'jsx-a11y/no-noninteractive-element-to-interactive-role',
  'jsx-a11y/no-noninteractive-tabindex',
  'jsx-a11y/no-redundant-roles',
  'react/no-unused-state',
  'lodash/callback-binding', 
  'lodash/chain-style', 
  'lodash/chaining', 
  'lodash/collection-method-value', 
  'lodash/collection-ordering', 
  'lodash/collection-return', 
  'lodash/consistent-compose', 
  'lodash/identity-shorthand', 
  'lodash/matches-prop-shorthand', 
  'lodash/matches-shorthand', 
  'lodash/no-commit', 
  'lodash/no-double-unwrap', 
  'lodash/no-extra-args', 
  'lodash/no-unbound-this', 
  'lodash/path-style', 
  'lodash/prefer-compact', 
  'lodash/prefer-constant', 
  'lodash/prefer-filter', 
  'lodash/prefer-find', 
  'lodash/prefer-flat-map', 
  'lodash/prefer-get', 
  'lodash/prefer-immutable-method', 
  'lodash/prefer-includes', 
  'lodash/prefer-invoke-map', 
  'lodash/prefer-is-nil', 
  'lodash/prefer-lodash-chain', 
  'lodash/prefer-lodash-method', 
  'lodash/prefer-lodash-typecheck', 
  'lodash/prefer-map', 
  'lodash/prefer-matches', 
  'lodash/prefer-noop', 
  'lodash/prefer-over-quantifier', 
  'lodash/prefer-reject', 
  'lodash/prefer-some', 
  'lodash/prefer-startswith', 
  'lodash/prefer-thru', 
  'lodash/prefer-times', 
  'lodash/prefer-wrapper-method', 
  'lodash/preferred-alias', 
  'lodash/prop-shorthand', 
  'lodash/unwrap',
];

// Prints rules recognized by ESLint that don't appear in the given config
// preset. It helps with upgrading the preset when new ESLint gets released.
const getRuleFinder = require('eslint-find-rules');
const specifiedFile = process.argv[2];
const ruleFinder = getRuleFinder(specifiedFile);

const missingRules = ruleFinder.getUnusedRules()
.filter(rule => DEPRECATED_RULES.indexOf(rule) === -1)
.filter(rule => EXPERIMENTAL_RULES.indexOf(rule) === -1);

if (missingRules.length) {
  console.log(`New rules to add to the config: ${missingRules.join(', ')}.`);
  process.exit(1);
}
